services:
  mongo:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mongodb-replicaset
    hostname: mongo  # Add this line
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: Yetu-client
      MONGO_INITDB_ROOT_PASSWORD: Yetu-client
      MONGO_INITDB_DATABASE: Yetu-client
    ports:
      - 27017:27017
    command: --replSet rs0 --keyFile /etc/mongo-keyfile --bind_ip_all --port 27017
    healthcheck:
       test: ["CMD", "mongosh", "--port", "27017", "-u", "Yetu-client", "-p", "Yetu-client", "--authenticationDatabase", "admin", "--eval", "rs.status()", "--quiet"]
       interval: 10s
       timeout: 10s
       start_period: 30s
       retries: 5
    volumes:
       - mongodb_data:/data/db
       - ./mongo-keyfile:/etc/mongo-keyfile:ro
    networks:
      - Yetu-network
      
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://Yetu-client:Yetu-client@mongo:27017/?authSource=admin&replicaSet=rs0
      ME_CONFIG_MONGODB_ADMINUSERNAME: "Yetu-client"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "Yetu-client"
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_BASICAUTH: false
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - Yetu-network

volumes:
  mongodb_data: {}

networks:
  Yetu-network:
    driver: bridge